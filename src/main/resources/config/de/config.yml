# Config für DrugsAdder.jar

#Version der Config
version: "0.1"

#Sprache der Config und der Befehle
language: de

#Ob die Daten asynchron geladen werden sollen
loadDataAsync: true

#Logging Einstellungen - Wenn du die Logs nicht brauchst, stelle sie auf false
logCustomItemLoadInfo: true
logCustomItemLoadComplete: true
logCustomItemLoadError: true
logRecipeLoadInfo: true
logRecipeLoadComplete: true
logRecipeLoadError: true
logDrugLoadInfo: true
logDrugLoadComplete: true
logDrugLoadError: true
logSeedLoadInfo: true
logSeedLoadComplete: true
logSeedLoadError: true
debugLogg: false
logGeneralInfo: true

#Table Title Array
#Es muss immer 4 Werte geben - Für eine genaue Erklärung siehe in der Wiki nach
tableTitleArray: "-7,-4,12,-2"
#Table Crafter Title Array
#Es muss immer 4 Werte geben - Für eine genaue Erklärung siehe in der Wiki nach
crafterTitleArray: "0,8,10,-10"

#Table States
#Es muss immer dies 20 States geben
#Du kannst jeden Unicode Character verwenden - Es ist nicht empfohlen Unicode Characters mehrfach zu verwenden
#Ebenso wird empfohlen die standard Unicode Characters zu verwenden mit dem DrugsAdder Texturenpacket
#Wenn Du die Unicode Characters ändern möchtest, musst Du auch das Texturenpacket ändern, für weitere Informationen siehe in der Wiki nach
tableStates:
  0: "\uF000"
  1: "\uF001"
  2: "\uF002"
  3: "\uF003"
  4: "\uF004"
  5: "\uF005"
  6: "\uF006"
  7: "\uF007"
  8: "\uF008"
  9: "\uF009"
  10: "\uF00A"
  11: "\uF00B"
  12: "\uF00C"
  13: "\uF00D"
  14: "\uF00E"
  16: "\uF00F"
  17: "\uF011"
  18: "\uF012"
  19: "\uF013"
  20: "\uF014"

#Crafter States
#Es muss immer dies 8 States geben
#Du kannst jeden Unicode Character verwenden - Es ist nicht empfohlen Unicode Characters mehrfach zu verwenden
#Ebenso wird empfohlen die standard Unicode Characters zu verwenden mit dem DrugsAdder Texturenpacket
#Wenn Du die Unicode Characters ändern möchtest, musst Du auch das Texturenpacket ändern, für weitere Informationen siehe in der Wiki nach
crafterStates:
  0: "\uF020"
  1: "\uF021"
  2: "\uF022"
  3: "\uF023"
  4: "\uF024"
  5: "\uF025"
  6: "\uF026"
  7: "\uF027"


#Ob ein Eimer zurückgegeben werden soll, wenn ein gefüllter Eimer beim Basteln verwendet wird
returnBucket: true
#Ob eine Flasche zurückgegeben werden sollte, wenn eine gefüllte Flasche beim Basteln verwendet wird
returnBottle: true
#Ob Items in der Werkbank in ihre ursprüngliche Version zurückgesetzt werden sollen
resetItemCrafting: true
#Ob Items im Ofen in ihre ursprüngliche Version zurückgesetzt werden sollen
resetItemSmelting: true

#Welches Item zurückgeben werden soll, wenn ein Rezept abgebrochen wird
cancelRecipeItem: "drugsadder:cancel_recipe_item"
#Welches Item zurückgeben werden soll, wenn ein Labortischrezept falsch ist
suspiciousPotionItem: "drugsadder:suspicious_potion"

#CustomItems
customItems:
  #Name des CustomItems - Dies ist die ID des CustomItems, die NamespacedID ist dann drugsadder:CUSTOMITEM_NAME
  cocaine:
    #Displayname vom Item
    #Du kannst auch Farbcodes mit '&' verwenden - Beispiel: '&7This is a Name'.
    #Du kannst auch Unicode-Zeichen verwenden - Beispiel: '\uE000'
    #Wenn der Name zu lang ist, wird er von Minecraft abgeschnitten und man sieht nicht den ganzen Namen.
    name: '&fCocaine'
    #Material des Gegenstandes - Hier sind nur Gegenstände aus Minecraft erlaubt
    material: 'apple'
    #Die Beschreibung des Gegenstandes - Du kannst so viele Zeilen hinzufügen, wie du willst, füge einfach ein '-' vor der Zeile ein.
    #Du kannst auch Farbcodes mit '&' verwenden - Beispiel: '&7This is a Name'.
    #Du kannst auch Unicode-Zeichen verwenden - Beispiel: '\uE000'
    #Wenn deine Lore zu lang ist, wird sie von Minecraft abgeschnitten und du wirst nicht die ganze Lore sehen.
    lore:
      - '&7Cocaine'
    #CustomModelData von dem Item
    #Beachten, dass das Modell aus dem höchsten Texturenpacket des Benutzers entnommen wird, welches diese hat.
    customModelData: 3
  dirty_cocaine:
    name: '&fDreckiges Kokain'
    material: 'apple'
    lore:
      - '&7Oh nein mein Kokain ist schmutzig'
    customModelData: 4
  cocaine_pill:
    name: '&fKokain Pille'
    material: 'apple'
    customModelData: 6
  blue_pill:
    name: '&fBlaue Pill'
    material: 'apple'
    customModelData: 2
    lore:
      - '&7You take the blue pill, the story ends.'
  red_pill:
    name: '&fRote Pill'
    material: 'apple'
    customModelData: 1
    lore:
      - '&7You take the red pill, you stay in Wonderland,'
      - '&7and I show you how deep the rabbit hole goes.'
  heroin_syringe:
    name: '&fHeroinspritze'
    material: 'apple'
    customModelData: 5
    lore:
      - '&7Spritz dir Heroin'
  joint:
    name: '&fJoint'
    material: 'apple'
    customModelData: 7
    lore:
      - '&7Lets smoke some Weed'
  pill_mold:
    name: '&fPill Mold'
    material: 'stick'
    lore:
      - '&7Lets press some Pills'
    customModelData: 3
  coca_leaf:
    name: '&fCoca Leaf'
    material: 'stick'
    lore:
      - '&7Coca'
    customModelData: 1
  hanf:
    name: '&fHanf'
    material: 'stick'
    lore:
      - '&7Coca'
    customModelData: 2
  suspicious_potion:
    name: '&cSus Potion'
    material: 'potion'
    lore:
      - '&7SUS Potion'
    customModelData: 0
    potionMeta:
      color: "255,10,255,125"
      effects:
        - 'PotionEffect{type=SLOW, duration=600, level=2, particles=true, icon=true}'
  coca_seeds:
    name: '&fCoca Seeds'
    material: 'pumpkin_seeds'
    lore:
      - '&7Coca'
    customModelData: 0

#Rezepte
recipes:
  #Der Abschnitt für die Fass rezepte füge hier deine Rezepte ein
  barrel:
    #Name des Rezeptes - Dies ist die ID des Rezeptes, die NamespacedID ist dann drugsadder:RECIPE_NAME
    dirty_cocaine:
      #Wie lange das Rezept dauert - In Minuten
      duration: 10
      #Wie lange das Rezept maximal noch liegen darf, nachdem es fertig ist - In Minuten
      processOverdueAcceptance: 5.5
      #Die Materialien des Rezepts - Du kannst maximal 3 Materialien hinzufügen
      #Die Position des Materials spielt keine Rolle.
      materials:
        1:
          #Das Material des ItemStacks - Verwende einfach eine gültige NamespacedID eines Gegenstandes, es kann ein CustomItem sein
          #CustomItems können in dem CustomItems Abschnitt konfiguriert werden oder ein anderes Plugin verwenden, das CustomItems hinzufügt und
          #mit DrugsAdder kompatibel ist. Um zu überprüfen, ob ein Plugin mit DrugsAdder kompatibel ist, siehe in der Wiki nach
          itemStack: 'minecraft:coal'
          #Die Anzahl dieses Materials, die für dieses Rezept erforderlich sind
          amount: 1
          #Der MatchType des Materials - Du kannst zwischen ALL, CONTAINS_LORE, CONTAINS_NAME, EXACT_CMD, EXACT_LORE, EXACT_NAME, VANNILA wählen
          #Du kannst MatchTypes auch mit einem ',' kombinieren - Beispiel: "EXACT_NAME,EXACT_LORE"
          #Für weitere Informationen zu MatchTypes siehe in der Wiki nach
          matchType: "ALL"
        2:
          itemStack: 'drugsadder:coca_leaf'
          amount: 4
          matchType: "ALL"
      #Das Ergebnis des Rezepts - Vor dem '/' ist der ItemStack und nach dem '/' ist die Anzahl
      result: 'drugsadder:dirty_cocaine/1'
  #Der Abschnitt für die Baurezepte (Werkbank) füge hier deine Rezepte ein
  crafting:
    #Name des Rezeptes - Dies ist die ID des Rezeptes, die NamespacedID ist dann drugsadder:RECIPE_NAME
    dirty_cocaine:
      #Ob das Rezept geformt ist oder nicht
      isShaped: true
      #Die Form des Rezeptes - Du musst 3 Zeilen hinzufügen und 3 Zeichen pro Zeile
      shape:
        - 'XVX'
        - 'XVX'
        - 'XVX'
      #Die Materialien des Rezepts - Du kannst maximal 9 Materialien hinzufügen
      #Die Position des Materials spielt keine Rolle, aber die Section muss in der Shape sein
      materials:
        #Die Schlüssel sind die Zeichen in der From
        X:
          #Das Material des ItemStacks - Verwende einfach eine gültige NamespacedID eines Gegenstandes, es kann ein CustomItem sein
          #CustomItems können in dem CustomItems Abschnitt konfiguriert werden oder ein anderes Plugin verwenden, das CustomItems hinzufügt und
          #mit DrugsAdder kompatibel ist. Um zu überprüfen, ob ein Plugin mit DrugsAdder kompatibel ist, siehe in der Wiki nach
          itemStack: 'minecraft:coal'
          #Die Anzahl dieses Materials, die für dieses Rezept erforderlich sind
          amount: 1
          #Ein MatchType ist nicht erforderlich
          #Alle Items, die in einer Werkbank verwendet werden, werden auf ihre ursprüngliche Version zurückgesetzt
          #Das heißt, wenn eine Lore oder ein Name hinzugefügt wurde von einem Spieler oder einem Plugin, wird es entfernt
          #Für weitere Informationen schaue in der Wiki nach
          #Du kannst, diese Einstellung auch Deaktivieren, indem Du die Einstellung resetItemCrafting auf false setzt
        V:
          itemStack: 'drugsadder:coca_leaf'
          amount: 4
          matchType: "ALL"
      #Das Ergebnis des Rezepts - Vor dem '/' ist der ItemStack und nach dem '/' ist die Anzahl
      result: 'drugsadder:dirty_cocaine/3'
  #Der Abschnitt für die Crafterrezepte füge hier deine Rezepte ein
  crafter:
    #Name des Rezeptes - Dies ist die ID des Rezeptes, die NamespacedID ist dann drugsadder:RECIPE_NAME
    dirty_cocaine:
      #Ob das Rezept geformt ist oder nicht
      isShaped: true
      #Die Form des Rezeptes - Du musst 5 Zeilen hinzufügen und 5 Zeichen pro Zeile
      shape:
        - 'OXVXO'
        - 'OXVXO'
        - 'OXVXO'
        - 'OXVXO'
        - 'OXVXO'
      #Die Zeit die benötigt wird, um das Rezept zu verarbeiten - In Sekunden
      processingTime: 10.0
      #Die Anzahl der Spieler, die für das Rezept benötigt werden
      requiredPlayers: 1
      #Die Materialien des Rezepts - Du kannst maximal 25 Materialien hinzufügen
      #Die Position des Materials spielt keine Rolle, aber die Section muss in der Shape sein
      materials:
        #The Shape Key
        X:
          #Das Material des ItemStacks - Verwende einfach eine gültige NamespacedID eines Gegenstandes, es kann ein CustomItem sein
          #CustomItems können in dem CustomItems Abschnitt konfiguriert werden oder ein anderes Plugin verwenden, das CustomItems hinzufügt und
          #mit DrugsAdder kompatibel ist. Um zu überprüfen, ob ein Plugin mit DrugsAdder kompatibel ist, siehe in der Wiki nach
          itemStack: 'minecraft:coal'
          #Die Anzahl dieses Materials, die für dieses Rezept erforderlich sind
          amount: 1
          #Der MatchType des Materials - Du kannst zwischen ALL, CONTAINS_LORE, CONTAINS_NAME, EXACT_CMD, EXACT_LORE, EXACT_NAME, VANNILA wählen
          #Du kannst MatchTypes auch mit einem ',' kombinieren - Beispiel: "EXACT_NAME,EXACT_LORE"
          #Für weitere Informationen zu MatchTypes siehe in der Wiki nach
          matchType: "ALL"
        V:
          itemStack: 'drugsadder:coca_leaf'
          amount: 4
          matchType: "ALL"
        #Das Ergebnis des Rezepts - Vor dem '/' ist der ItemStack und nach dem '/' ist die Anzahl
      result: 'drugsadder:dirty_cocaine/4'
  #Der Abschnitt für die Ofenrezepte füge hier deine Rezepte ein
  furnace:
    #Name des Rezeptes - Dies ist die ID des Rezeptes, die NamespacedID ist dann drugsadder:RECIPE_NAME
    cocaine:
      #Der Typ des Rezeptes - Du kannst zwischen FURNACE, SMOKING, BLASTING wählen
      recipeType: "BLASTING"
      #Wie lange das Rezept dauert - In Sekunden
      cookingTime: 100
      #Die Erfahrung, die der Spieler erhält, wenn er das Rezept ausführt
      exp: 0
      #Das Material des Rezepts - Du kannst maximal 1 Material hinzufügen
      material:
        #Das Material des ItemStacks - Verwende einfach eine gültige NamespacedID eines Gegenstandes, es kann ein CustomItem sein
        #CustomItems können in dem CustomItems Abschnitt konfiguriert werden oder ein anderes Plugin verwenden, das CustomItems hinzufügt und
        #mit DrugsAdder kompatibel ist. Um zu überprüfen, ob ein Plugin mit DrugsAdder kompatibel ist, siehe in der Wiki nach
        itemStack: 'drugsadder:dirty_cocaine'
        #Die Anzahl is immer 1
        #Ein MatchType ist nicht erforderlich
        #Alle Items, die in dem Ofenrezept verwendet werden, werden auf ihre ursprüngliche Version zurückgesetzt
        #Das heißt, wenn eine Lore oder ein Name hinzugefügt wurde von einem Spieler oder einem Plugin, wird es entfernt
        #Für weitere Informationen schaue in der Wiki nach
        #Du kannst, diese Einstellung auch Deaktivieren, indem Du die Einstellung resetItemCrafting auf false setzt
      #Das Ergebnis des Rezepts - Vor dem '/' ist der ItemStack und nach dem '/' ist die Anzahl
      result: 'drugsadder:cocaine/1'
  #Der Abschnitt für die Pressrezepte füge hier deine Rezepte ein
  press:
    #Name des Rezeptes - Dies ist die ID des Rezeptes, die NamespacedID ist dann drugsadder:RECIPE_NAME
    cocaine_pills:
      #Wie lange das Rezept dauert - In Sekunden
      duration: 5.0
      #Die Form des Rezeptes - Verwende einfach ein gültiges NamespacedID eines Gegenstandes, es kann ein CustomItem sein
      mold: 'drugsadder:pill_mold'
      #Ob die Form zurückgegeben werden soll, wenn das Rezept abgeschlossen ist
      returnMold: true
      #Die Materialien des Rezepts - Du kannst so viele Materialien hinzufügen, wie du willst
      #Die Position des Materials spielt keine Rolle
      #Es Wird empfohlen nicht mehr als 3 Materialien zu verwenden
      materials:
        1:
          #Das Material des ItemStacks - Verwende einfach eine gültige NamespacedID eines Gegenstandes, es kann ein CustomItem sein
          #CustomItems können in dem CustomItems Abschnitt konfiguriert werden oder ein anderes Plugin verwenden, das CustomItems hinzufügt und
          #mit DrugsAdder kompatibel ist. Um zu überprüfen, ob ein Plugin mit DrugsAdder kompatibel ist, siehe in der Wiki nach
          itemStack: 'drugsadder:cocaine'
          #Die Anzahl dieses Materials, die für dieses Rezept erforderlich sind
          amount: 5
          #Der MatchType des Materials - Du kannst zwischen ALL, CONTAINS_LORE, CONTAINS_NAME, EXACT_CMD, EXACT_LORE, EXACT_NAME, VANNILA wählen
          #Du kannst MatchTypes auch mit einem ',' kombinieren - Beispiel: "EXACT_NAME,EXACT_LORE"
          #Für weitere Informationen zu MatchTypes siehe in der Wiki nach
          matchType: "ALL"
      #Das Ergebnis des Rezepts - Vor dem '/' ist der ItemStack und nach dem '/' ist die Anzahl
      result: 'drugsadder:cocaine_pill/6'
    red_pills:
      duration: 10.0
      mold: 'drugsadder:pill_mold'
      returnMold: true
      materials:
        1:
          itemStack: 'drugsadder:cocaine'
          amount: 2
          matchType: "ALL"
        2:
          itemStack: 'minecraft:red_dye'
          amount: 1
          matchType: "ALL"
      result: 'drugsadder:red_pill/1'
    blue_pills:
      duration: 10.0
      mold: 'drugsadder:pill_mold'
      returnMold: true
      materials:
        1:
          itemStack: 'drugsadder:cocaine'
          amount: 2
          matchType: "ALL"
        2:
          itemStack: 'minecraft:blue_dye'
          amount: 1
          matchType: "ALL"
      result: 'drugsadder:blue_pill/1'
  #Der Abschnitt für die Labortischrezepte füge hier deine Rezepte ein
  table:
    #Name des Rezeptes - Dies ist die ID des Rezeptes, die NamespacedID ist dann drugsadder:RECIPE_NAME
    heroin:
      #Du kannst das Rezept aus bis zu zwei Materialien erstellen
      #Der Filter, welcher für das erste Material benötigt wird
      filterOne: 'minecraft:paper/1'
      #Ob der Filter verbraucht werden soll
      consumeFilterOne: true
      #Der Brennstoff, welcher für das erste Material benötigt wird
      fuelOne: 'minecraft:coal/1'
      #Die Zeit, die benötigt wird, um das erste Material zu verarbeiten - In Sekunden
      processingTimeOne: 10.0
      #Der Filter, welcher für das zweite Material benötigt wird
      filterTwo: 'minecraft:paper/1'
      #Ob der Filter verbraucht werden soll
      consumeFilterTwo: true
      #Der Brennstoff, welcher für das zweite Material benötigt wird
      fuelTwo: 'minecraft:coal/1'
      #Die Zeit, die benötigt wird, um das zweite Material zu verarbeiten - In Sekunden
      processingTimeTwo: 10.0
      #Die Position des Materials spielt eine Rolle
      #1 = one, 2 = two
      materials:
        1:
          #Das Material des ItemStacks - Verwende einfach eine gültige NamespacedID eines Gegenstandes, es kann ein CustomItem sein
          #CustomItems können in dem CustomItems Abschnitt konfiguriert werden oder ein anderes Plugin verwenden, das CustomItems hinzufügt und
          #mit DrugsAdder kompatibel ist. Um zu überprüfen, ob ein Plugin mit DrugsAdder kompatibel ist, siehe in der Wiki nach
          itemStack: 'drugsadder:red_pill'
          #Die Anzahl dieses Materials, die für dieses Rezept erforderlich sind
          amount: 1
          #Der MatchType des Materials - Du kannst zwischen ALL, CONTAINS_LORE, CONTAINS_NAME, EXACT_CMD, EXACT_LORE, EXACT_NAME, VANNILA wählen
          #Du kannst MatchTypes auch mit einem ',' kombinieren - Beispiel: "EXACT_NAME,EXACT_LORE"
          #Für weitere Informationen zu MatchTypes siehe in der Wiki nach
          matchType: "ALL"
        2:
          itemStack: 'drugsadder:blue_pill'
          amount: 1
          matchType: "ALL"
      #Das Ergebnis des Rezepts - Vor dem '/' ist der ItemStack und nach dem '/' ist die Anzahl
      result: 'drugsadder:heroin_syringe/1'

#Drogen
drugs:
  #Name der Droge - Dies ist die ID der Droge, die NamespacedID ist dann drugsadder:DRUG_NAME
  cocaine:
    #Welcher Gegenstand für die Droge verwendet wird - Verwende einfach eine gültige NamespacedID eines Gegenstandes, es kann ein CustomItem sein
    #Beachte, dass der Gegenstand ein konsumierbarer Gegenstand sein muss
    itemStack: 'drugsadder:cocaine'
    #Der MatchType des Materials - Du kannst zwischen ALL, CONTAINS_LORE, CONTAINS_NAME, EXACT_CMD, EXACT_LORE, EXACT_NAME, VANNILA wählen
    #Du kannst MatchTypes auch mit einem ',' kombinieren - Beispiel: "EXACT_NAME,EXACT_LORE"
    #Für weitere Informationen zu MatchTypes siehe in der Wiki nach
    #Der MatchType wird verwendet, um zu überprüfen, ob der konsumierte Gegenstand der Droge entspricht
    matchType: "ALL"
    #Hier kannst du konfigurieren, ob die Droge süchtig macht oder nicht
    #Wenn du die Sucht deaktivieren möchtest, setze addictionAble auf false
    addictionSettings:
      #Ob die Droge süchtig macht oder nicht
      addictionAble: true
      #Die addictionPoints werden dem Spieler hinzugefügt, wenn die Droge konsumiert wird
      addictionPoints: 10
      #Wie oft der Spieler diese Droge konsumieren kann, bevor er eine Überdosis bekommt
      #Für den Zeitraum, der Überdosis siehe overdoseTime
      overdose: 3
      #Der Zeitraum, in dem der Spieler eine Überdosis bekommt, wenn er die Droge zu oft konsumiert
      #BSP: 600 bedeutet 10 Minuten, in diesen 10 Minuten kann der Spieler die Droge dreimal konsumieren, ohne eine Überdosis zu bekommen
      overdoseTime: 600
      #Die Zeit, die benötigt wird, um die addictionPoints in Minuten zu reduzieren
      reductionTime: 10
      #Die Anzahl der addictionPoints, die reduziert werden, wenn die Zeit abgelaufen ist
      reductionAmount: 1
      #Ob die addictionPoints nur reduziert werden sollen, wenn der Spieler online ist
      reductionOnlyOnline: true
      #Welche Effekte du bekommst, wenn du süchtig nach der Droge bist und sie konsumierst
      #Füge einfach einen Wert von addictionPoints hinzu und dann eine Liste von Effekten
      #Die Effekte werden von den addictionPoints des Spielers ausgewählt, wenn er nicht in der Liste ist, wird er der nächstgelegene Wert genommen
      #Die Effekte sind Minecraft PotionEffects - Du kannst so viele hinzufügen, wie du willst
      #Beispiel: 15: - 'PotionEffect{type=SPEED, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=100, particles=true, icon=true}'
      #Das bedeutet, wenn der Spieler 15 addictionPoints hat, erhält er den Effekt
      #Wenn der Spieler 16 addictionPoints hat, erhält er auch den Effekt
      consummation:
        15:
          - 'PotionEffect{type=SPEED, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=100, particles=true, icon=true}'
        30:
          - 'PotionEffect{type=WEAKNESS, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=30, particles=true, icon=true}'
      #Welche Effekte du bekommst, wenn du süchtig nach der Droge bist und sie nicht konsumierst
      #Füge einfach einen Wert von addictionPoints hinzu und dann eine Liste von Effekten
      #Die Effekte werden von den addictionPoints des Spielers ausgewählt, wenn er nicht in der Liste ist, wird er der nächstgelegene Wert genommen
      #Die Effekte sind Minecraft PotionEffects - Du kannst so viele hinzufügen, wie du willst
      #Beispiel: 15: - 'PotionEffect{type=SPEED, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=100, particles=true, icon=true}'
      #Das bedeutet, wenn der Spieler 15 addictionPoints hat, erhält er den Effekt
      #Wenn der Spieler 16 addictionPoints hat, erhält er auch den Effekt
      deprivation:
        15:
          - 'PotionEffect{type=WEAKNESS, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=30, particles=true, icon=true}'
        30:
          - 'PotionEffect{type=WEAKNESS, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=30, particles=true, icon=true}'
          - 'PotionEffect{type=SLOW, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=30, particles=true, icon=true}'
    #Die Effekte, die der Spieler erhält, wenn er die Droge konsumiert - Du kannst so viele hinzufügen, wie du willst
    effects:
      - 'PotionEffect{type=SPEED, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=100, particles=true, icon=true}'
    #Die Befehle welche ausgeführt werden, wenn die Droge konsumiert wird - Du kannst so viele hinzufügen, wie du willst
    #Du kannst die folgenden Platzhalter verwenden: %player%, %drug%
    #Du kannst auch Farbcodes mit '&' verwenden - Beispiel: 'say &7TDas ist ein Befehl'.
    #Du kannst auch Unicode-Zeichen verwenden - Beispiel: '\uE000'
    #Die Befehle werden vom Server ausgeführt
    serverCommands:
      - 'say %player% hat %drug% genommen!'
    #Spielerbefehle bedeutet, dass der Befehl vom Spieler ausgeführt wird
    #Beachte, dass der Spieler die Berechtigung haben muss, den Befehl auszuführen
    playerCommands:
      - 'say Ich habe %drug% konsumiert!'
    #Die Nachricht, die an den Spieler gesendet wird, wenn die Droge konsumiert wird
    #Du kannst die folgenden Platzhalter verwenden: %player%, %drug%
    consumeMessage: 'Du hast %drug% konsumiert'
    #Der Titel, der dem Spieler angezeigt wird, wenn die Droge konsumiert wird
    #Du kannst die folgenden Platzhalter verwenden: %player%, %drug%
    consumeTitle: 'Du has %drug% konsumiert'

#Samen
seeds:
  #Name des Samens - Dies ist die ID des Samens du kannst jede NamespacedID verwenden die eine unterstützte Pflanze ist
  #Für unterstützte Pflanzen siehe in der Wiki nach
  "drugsadder:coca_seeds":
    #Ob die Pflanze beim Ernten zerstört werden soll
    destroyOnHarvest: true
    #Wie lange die Pflanze zum Wachsen braucht - In Sekunden
    growTime: 60
    #Der MatchType des Materials - Du kannst zwischen ALL, CONTAINS_LORE, CONTAINS_NAME, EXACT_CMD, EXACT_LORE, EXACT_NAME, VANNILA wählen
    #Du kannst MatchTypes auch mit einem ',' kombinieren - Beispiel: "EXACT_NAME,EXACT_LORE"
    #Für weitere Informationen zu MatchTypes siehe in der Wiki nach
    matchType: "ALL"
    #Die Werkzeuge, die verwendet werden können, um die Pflanze zu ernten - Du kannst so viele hinzufügen, wie du willst
    #Es wird wie folgt geschrieben: "NamespacedID": damage - Es können CustomItems verwendet werden
    #Die Zahl repräsentiert den Schaden, welchen das Werkzeug erhält, wenn es die Pflanze erntet
    #Wenn der Schaden größer ist als die Haltbarkeit des Werkzeugs, wird das Werkzeug zerstört
    #Es können nur Werkzeuge schaden erhalten, die eine Haltbarkeit haben
    #Wenn du möchtest das sie keinen Schaden erhalten, setze den Schaden auf 0
    #Die Verzauberung Haltbarkeit wird berücksichtigt
    allowedTools:
      "minecraft:air": 0
      "minecraft:diamond_hoe": 1
    #Die Drops, die die Pflanze fallen lässt, wenn sie geerntet wird - Du kannst so viele hinzufügen, wie du willst
    #Die reihenfolge der Drops spielt keine Rolle
    #Die Verzauberung Glück wird nicht berücksichtigt
    drops:
      1:
        #Der ItemStack, der fallen gelassen wird - Verwende einfach eine gültige NamespacedID eines Gegenstandes, es kann ein CustomItem sein
        itemStack: 'drugsadder:coca_leaf'
        #Wie viele Items fallen gelassen werden sollen
        amount: 1
        #Die Wahrscheinlichkeit, dass der Drop fallen gelassen wird in Prozent - 100 bedeutet 100%
        #Die Wahrscheinlichkeit muss zwischen 0 und 100 liegen - Wenn die Wahrscheinlichkeit 0 ist, wird der Drop nicht fallen gelassen
        #Die Wahrscheinlichkeit kann 3 Nachkommastellen haben - Beispiel: 50.333
        probability: 100
      2:
        itemStack: 'drugsadder:coca_seeds'
        amount: 1
        probability: 10