# Config for DrugsAdder.jar

#Version of the Config
version: "0.1"

#Language of the Messages and Commands
language: de

#Logging Einstellungen - Wenn du die Logs nicht brauchst stelle sie auf false
logCustomItemLoadInfo: true
logCustomItemLoadComplete: true
logCustomItemLoadError: true
logRecipeLoadInfo: true
logRecipeLoadComplete: true
logRecipeLoadError: true
logDrugLoadInfo: true
logDrugLoadComplete: true
logDrugLoadError: true
logSeedLoadInfo: true
logSeedLoadComplete: true
logSeedLoadError: true

#Table States
#Es muss immer 8 States geben
#Du kannst jeden Unicode Character verwenden - Es ist nicht empfohlen Unicode Characters mehrfach zu verwenden
#Ebenso wird empfohlen die standard Unicode Characters zu verwenden mit dem DrugsAdder Texturenpacket
tableStates:
  0: "\uE000"
  1: "\uE001"
  2: "\uE002"
  3: "\uE003"
  4: "\uE004"
  5: "\uE005"
  6: "\uE006"
  7: "\uE007"

#CustomItems
customItems:
  #Name des CustomItems - Dies ist die ID des CustomItems, die NamespacedID ist dann drugsadder:CUSTOMITEM_NAME
  cocaine:
    #Displayname of the Item
    #Du kannst auch Farbcodes mit '&' verwenden - Beispiel: '&7This is a Name'.
    #Du kannst auch Unicode-Zeichen verwenden - Beispiel: '\uE000'
    #Wenn der Name zu lang ist, wird er von Minecraft abgeschnitten und man sieht nicht den ganzen Namen.
    name: '&fCocaine'
    #Material des Gegenstandes - Hier sind nur Gegenstände aus Minecraft erlaubt
    material: 'paper'
    #Die Beschreibung des Gegenstandes - Du kannst so viele Zeilen hinzufügen, wie du willst, füge einfach ein '-' vor der Zeile ein.
    #Du kannst auch Farbcodes mit '&' verwenden - Beispiel: '&7This is a Name'.
    #Du kannst auch Unicode-Zeichen verwenden - Beispiel: '\uE000'
    #Wenn deine Lore zu lang ist, wird sie von Minecraft abgeschnitten und du wirst nicht die ganze Lore sehen.
    lore:
      - '&7Cocaine'
    #CustomModelData von dem Item
    #Beachten, dass das Modell aus dem höchsten Texturenpacket des Benutzers entnommen wird, welches diese hat.
    customModelData: 1
  dirty_cocaine:
    name: '&fDirty Cocaine'
    material: 'paper'
    lore:
      - '&7Dirty Cocaine'
    customModelData: 2
  cocaine_pills:
    name: '&fCocaine Pills'
    material: 'paper'
    lore:
      - '&7Cocaine Pills'
    customModelData: 3
  pill_mold:
    name: '&fPill Mold'
    material: 'paper'
    lore:
      - '&7Pill Mold'
    customModelData: 4
  coca:
    name: '&fCoca'
    material: 'paper'
    lore:
      - '&7Coca'
    customModelData: 5
  shrooms:
    name: '&fShrooms'
    material: 'paper'
    lore:
      - '&7Shrooms'
    customModelData: 6

#Ob ein Eimer zurückgegeben werden soll, wenn ein gefüllter Eimer beim Basteln verwendet wird
returnBucket: true
#Ob eine Flasche zurückgegeben werden sollte, wenn eine gefüllte Flasche beim Basteln verwendet wird
returnBottle: true


#Rezepte
recipes:
  #Der Abschnitt für die Fassrezepte fügen hier deine Rezepte ein
  barrel:
    #Name des Rezeptes - Dies ist die ID des Rezeptes, die NamespacedID ist dann drugsadder:RECIPE_NAME
    dirty_cocaine:
      #Wie lande das Rezept dauert - In Minuten
      duration: 10
      #
      processOverdueAcceptance: 5.5 #In Minutes
      #Die Materialien des Rezepts - Du kannst maximal 3 Materialien hinzufügen
      #Die Position des Materials spielt keine Rolle.
      materials:
        1:
          #The Material of the ItemStack - Just use a valid NamespacedID of an Item it can be a CustomItem
          #CustomItems can be configured in the CustomItems Section or use a other Plugin that adds CustomItems and
          #is compatible with DrugsAdder. To check if a Plugin is compatible with DrugsAdder check the Wiki
          itemStack: 'minecraft:coal'
          #The Amount of this Material that are required for this Recipe
          amount: 1
          #The MatchType of the Material - You can choose between ALL, CONTAINS_LORE, CONTAINS_NAME, EXACT_CMD, EXACT_LORE, EXACT_NAME, VANNILA
          #You can also combine MatchTypes with a ',' - Example: "EXACT_NAME,EXACT_LORE"
          #For more Information about MatchTypes check the Wiki
          matchType: "ALL"
        2:
          itemStack: 'drugsadder:coca'
          amount: 4
          matchType: "ALL"
        #The Result of the Recipe - Before the '/' is the ItemStack and after the '/' is the Amount
      result: 'drugsadder:dirty_cocaine/1'
  #The Section for the Crafting Recipes add here your Recipes
  crafting:
    #Name of the Recipe - This is the ID of the Recipe, the NamespacedID is then drugsadder:RECIPE_NAME
    dirty_cocaine:
      #Whether the Recipe is Shaped or not
      isShaped: true
      #The Shape of the Recipe - You musst add 3 Lines and 3 Characters per Line
      shape:
        - 'XVX'
        - 'XVX'
        - 'XVX'
      #The Materials of the Recipe - You can add 9 Materials
      #The position of the Material does not matter but the Section must be in the Shape
      materials:
        #The Shape Key
        X:
          #The Material of the ItemStack - Just use a valid NamespacedID of an Item it can be a CustomItem
          #CustomItems can be configured in the CustomItems Section or use a other Plugin that adds CustomItems and
          #is compatible with DrugsAdder. To check if a Plugin is compatible with DrugsAdder check the Wiki
          itemStack: 'minecraft:coal'
          #The Amount of this Material that are required for this Recipe
          amount: 1
          #The MatchType of the Material - You can choose between ALL, CONTAINS_LORE, CONTAINS_NAME, EXACT_CMD, EXACT_LORE, EXACT_NAME, VANNILA
          #You can also combine MatchTypes with a ',' - Example: "EXACT_NAME,EXACT_LORE"
          #For more Information about MatchTypes check the Wiki
          matchType: "ALL"
        V:
          itemStack: 'drugsadder:coca'
          amount: 4
          matchType: "ALL"
      #The Result of the Recipe - Before the '/' is the ItemStack and after the '/' is the Amount
      result: 'drugsadder:dirty_cocaine/6'
    shrooms:
      isShaped: false
      shape:
        - 'XOE'
        - 'XXX'
        - 'XXX'
      materials:
        E:
          itemStack: 'minecraft:sugar'
          amount: 1
          matchType: "ALL"
        O:
          itemStack: 'drugsadder:coca'
          amount: 1
          matchType: "ALL"
      result: 'drugsadder:shrooms/6'
  #The Section for the Furnace Recipes add here your Recipes
  furnace:
    #Name of the Recipe - This is the ID of the Recipe, the NamespacedID is then drugsadder:RECIPE_NAME
    cocaine:
      #The Type of the Recipe - You can choose between FURNACE, BLASTING and SMOKING
      recipeType: "FURNACE"
      #The Duration of the Recipe - In Seconds
      cookingTime: 100
      #The Experience you receive for the Recipe
      exp: 0
      #The Materials of the Recipe - You can only add 1 Material
      material:
        #The Material of the ItemStack - Just use a valid NamespacedID of an Item it can be a CustomItem
        #CustomItems can be configured in the CustomItems Section or use a other Plugin that adds CustomItems and
        #is compatible with DrugsAdder. To check if a Plugin is compatible with DrugsAdder check the Wiki
        itemStack: 'drugsadder:dirty_cocaine'
        #The Amount of this Material that are required for this Recipe
        amount: 1
      #The Result of the Recipe - Before the '/' is the ItemStack and after the '/' is the Amount
      result: 'drugsadder:cocaine/1'
    blast_cocaine:
      recipeType: "BLASTING"
      cookingTime: 50
      exp: 0
      material:
        itemStack: 'drugsadder:dirty_cocaine'
        amount: 1
      result: 'drugsadder:cocaine/1'
    smoke_cocaine:
      recipeType: "SMOKING"
      cookingTime: 75
      exp: 0
      material:
        itemStack: 'drugsadder:dirty_cocaine'
        amount: 1
      result: 'drugsadder:cocaine/1'
  #The Section for the Press Recipes add here your Recipes
  press:
    #Name of the Recipe - This is the ID of the Recipe, the NamespacedID is then drugsadder:RECIPE_NAME
    cocaine_pills:
      #The Duration of the Recipe - In Seconds
      duration: 2.0
      #The Mold of the Recipe - Just use a valid NamespacedID of an Item
      mold: 'drugsadder:pill_mold'
      #If the Mold should be returned after the pressing
      returnMold: true
      #The Materials of the Recipe
      materials:
        1:
          #The Material of the ItemStack - Just use a valid NamespacedID of an Item it can be a CustomItem
          #CustomItems can be configured in the CustomItems Section or use a other Plugin that adds CustomItems and
          #is compatible with DrugsAdder. To check if a Plugin is compatible with DrugsAdder check the Wiki
          itemStack: 'drugsadder:dirty_cocaine'
          #The Amount of this Material that are required for this Recipe
          amount: 2
          #The MatchType of the Material - You can choose between ALL, CONTAINS_LORE, CONTAINS_NAME, EXACT_CMD, EXACT_LORE, EXACT_NAME, VANNILA
          #You can also combine MatchTypes with a ',' - Example: "EXACT_NAME,EXACT_LORE"
          #For more Information about MatchTypes check the Wiki
          matchType: "ALL"
      #The Result of the Recipe - Before the '/' is the ItemStack and after the '/' is the Amount
      result: 'drugsadder:cocaine_pills/1'
  table:
    test:
      filterOne: 'minecraft:paper/1'
      consumeFilterOne: true
      fuelOne: 'minecraft:coal/1'
      filterTwo: 'minecraft:paper/1'
      consumeFilterTwo: true
      fuelTwo: 'minecraft:coal/1'
      materials:
        1:
          itemStack: 'drugsadder:dirty_cocaine'
          amount: 1
          matchType: "ALL"
        2:
          itemStack: 'drugsadder:dirty_cocaine'
          amount: 1
          matchType: "ALL"
      result: 'drugsadder:cocaine_pills/1'

#Drugs
drugs:
  #Name of the Drug - This is the ID of the Drug, the NamespacedID is then drugsadder:DRUG_NAME
  cocaine:
    #Which Item is used for the Drug - Just use a valid NamespacedID of an Item it can be a CustomItem
    #Note that the Item must be a consumable Item
    itemStack: 'drugsadder:cocaine'
    #The MatchType of the Material - You can choose between ALL, CONTAINS_LORE, CONTAINS_NAME, EXACT_CMD, EXACT_LORE, EXACT_NAME, VANNILA
    #You can also combine MatchTypes with a ',' - Example: "EXACT_NAME,EXACT_LORE"
    #For more Information about MatchTypes check the Wiki
    #The MatchType will be used to check if the Item is a Drug on consume of an Item
    matchType: "ALL"
    #Here you can configure if a Drug is addictive or not
    #If you want to disable the addiction just set addictionAble to false
    addictionSettings:
      #Is the Drug addictive
      addictionAble: true
      #The addictionPoints that are added to the player when the Drug is consumed
      addictionPoints: 10
      #Overdose
      overdose: 3
      #The time it takes to reduce the addictionPoints in minutes
      reductionTime: 10
      #The amount of addictionPoints that are reduced when the reductionTime is over
      reductionAmount: 1
      #If the reduction should only be made if the player is online
      reductionOnlyOnline: true
      #Which effects you get when you are addicted to the Drug and consume it
      #Just add a value of addictionPoints and then a List of effects
      #The effects will be chosen by the players addictionPoints if it is not in the list it will be the closest value
      #The effects are Minecraft PotionEffects - You can add as many as you want
      #Example: 15: - 'PotionEffect{type=SPEED, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=100, particles=true, icon=true}'
      #This means if the player has 15 addictionPoints he will get the effect
      #If the player has 16 addictionPoints he will also get the effect
      consummation:
        15:
          - 'PotionEffect{type=SPEED, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=100, particles=true, icon=true}'
        30:
          - 'PotionEffect{type=WEAKNESS, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=30, particles=true, icon=true}'
      #Which effects you get when the player is in deprivation
      #Just add a value of addictionPoints and then a List of effects
      #The effects will be chosen by the players addictionPoints if it is not in the list it will be the closest value
      #The effects are Minecraft PotionEffects - You can add as many as you want
      #Example: 15: - 'PotionEffect{type=SPEED, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=100, particles=true, icon=true}'
      #This means if the player has 15 addictionPoints he will get the effect
      #If the player has 16 addictionPoints he will also get the effect
      deprivation:
        15:
          - 'PotionEffect{type=WEAKNESS, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=30, particles=true, icon=true}'
        30:
          - 'PotionEffect{type=WEAKNESS, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=30, particles=true, icon=true}'
          - 'PotionEffect{type=SLOW, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=30, particles=true, icon=true}'
    #The Effects of the Drug - The effects are Minecraft PotionEffects - You can add as many as you want
    effects:
      - 'PotionEffect{type=SPEED, minDuration=600, maxDuration=700, minLevel=1, maxLevel=2, probability=100, particles=true, icon=true}'
    #The Commands that are executed when the Drug is consumed - You can add as many as you want
    #You can use the following Placeholders: %player%, %drug%
    #You can also use color codes with '&' in your Command lines - Example: '&7This is a Command'
    #You can also use Unicode Characters in your Command lines - Example: '\uE000'
    #ServerCommands means that the Command will be executed by the Server
    serverCommands:
      - 'say %player% has %drug% consumed!'
    #PlayerCommands means that the Command will be executed by the Player
    #Note that the Player must have the Permission to execute the Command
    playerCommands:
      - 'say Ich have %drug% consumed!'
    #The Message that is sent to the Player when the Drug is consumed
    #You can use the following Placeholders: %player%, %drug%
    consumeMessage: 'You have %drug% consumed'
    #The Title that is sent to the Player when the Drug is consumed
    #You can use the following Placeholders: %player%, %drug%
    consumeTitle: 'You have %drug% consumed'

#Seeds
seeds:
  #Name of the Seed - This is the ID of the Seed you can use any namespacedID that is a supported Plant
  #For Plants check the Wiki
  "minecraft:wheat_seeds":
    #If the Plant should be destroyed when it is harvested
    destroyOnHarvest: true
    #The time it takes to grow the Plant in Seconds
    growTime: 60
    #The MatchType of the Material - You can choose between ALL, CONTAINS_LORE, CONTAINS_NAME, EXACT_CMD, EXACT_LORE, EXACT_NAME, VANNILA
    #You can also combine MatchTypes with a ',' - Example: "EXACT_NAME,EXACT_LORE"
    #For more Information about MatchTypes check the Wiki
    matchType: "ALL"
    #The Drops of the Plant - You can add as many as you want
    #The order of the Drops does not matter
    drops:
      1:
        #The Material of the ItemStack - Just use a valid NamespacedID of an Item it can be a CustomItem
        itemStack: 'drugsadder:coca'
        #The Amount of this Material that are dropped
        amount: 1
        #The Probability of the Drop - The Probability is in Percent - 100 means 100%
        #The Probability must be between 0 and 100 - If the Probability is 0 the Drop will not be dropped
        #The Probability can have 3 decimal places - Example: 50.333
        probability: 100
      2:
        itemStack: 'drugsadder:shrooms'
        amount: 1
        probability: 50
  "minecraft:tall_grass":
    destroyOnHarvest: false
    growTime: 60
    matchType: "ALL"
    drops:
      1:
        itemStack: 'drugsadder:coca'
        amount: 1
        probability: 20